{"version":3,"sources":["Logon.js","List.js","boot.js","App.js","reportWebVitals.js","index.js"],"names":["Logon","state","user","localStorage","getItem","password","inputuserChange","setState","inputpasswordChange","clickAlert","e","username","userpassword","axios","post","then","response","data","setItem","token","window","location","href","catch","error","console","log","render","className","size","placeholder","value","onChange","type","onClick","React","Component","LocationList","loading","locations","componentDidMount","get","headers","alert","logout","removeItem","formatTime","time","year","parseInt","split","month","day","totalDay","hour","minute","today","Date","todayYear","getFullYear","todayMonth","getMonth","todayDay","getDate","detailBody","itemList","i","length","li","src","avatar","with","height","style","borderRadius","alt","nickName","ad","loc","Math","random","push","width","BootPage","setTimeout","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"mSAMMA,E,4MAEFC,MAAQ,CAEJC,KAAMC,aAAaC,QAAQ,YAC3BC,SAAUF,aAAaC,QAAQ,iB,EAGnCE,gBAAkB,SAACJ,GACf,EAAKK,SAAS,CACVL,KAAMA,K,EAIdM,oBAAsB,SAACH,GACnB,EAAKE,SAAS,CACVF,SAAUA,K,EAIlBI,WAAa,SAACC,GAEV,IAAIC,EAAW,EAAKV,MAAMC,KACtBU,EAAe,EAAKX,MAAMI,SAE9BQ,IAAMC,KAAK,+CAAgD,CACvD,OAAUH,EACV,SAAYC,IAEXG,MAAK,SAAUC,GAEZ,IAAIC,EAAOD,EAASC,KAGpBd,aAAae,QAAQ,WAAYP,GACjCR,aAAae,QAAQ,eAAgBN,GACrCT,aAAae,QAAQ,QAASD,EAAKE,OACnCC,OAAOC,SAASC,KAAO,sBAG1BC,OAAM,SAAUC,GAEbC,QAAQC,IAAIF,O,EAIxBG,OAAS,WACL,OACI,qBAAKC,UAAU,QAAf,SAEI,eAAC,IAAD,CAAWC,KAAK,KAAhB,UAEI,qBAAKD,UAAU,QAAf,yDAEA,cAAC,IAAD,CAAYC,KAAK,OACjB,cAAC,IAAD,CAAYA,KAAK,OAEjB,eAAC,IAAD,CAAWC,YAAY,uCAASC,MAAO,EAAK9B,MAAMC,KAAM8B,SAAU,EAAK1B,gBAAvE,cAAyF,qBAAKsB,UAAU,uBAExG,cAAC,IAAD,CAAWK,KAAK,WAAWH,YAAY,iCAAQC,MAAO,EAAK9B,MAAMI,SAAU2B,SAAU,EAAKxB,oBAA1F,SAA+G,qBAAKoB,UAAU,wBAC9H,cAAC,IAAD,CAAYC,KAAK,OAEjB,cAAC,IAAD,CAAQI,KAAK,UAAUC,QAAS,EAAKzB,WAArC,gC,YA9DA0B,IAAMC,WCFpBC,E,4MAEFpC,MAAQ,CACJqC,SAAS,EACTC,UAAW,I,EAIfC,kBAAoB,WAEyB,OAArCrC,aAAaC,QAAQ,aAAiE,OAAzCD,aAAaC,QAAQ,iBAA8D,OAAlCD,aAAaC,QAAQ,WACnHgB,OAAOC,SAASC,KAAO,qBAG3BT,IAAM4B,IAAI,0DAA2D,CAEjEC,QAAS,CACL,MAASvC,aAAaC,QAAQ,YAIjCW,MAAK,SAACC,GAEH,IAAIC,EAAOD,EAASC,KACpBQ,QAAQC,IAAIT,GAEZ,EAAKV,SAAS,CACV+B,SAAS,EACTC,UAAWtB,OAIlBM,OAAM,SAACC,GACJC,QAAQC,IAAIF,GACZmB,MAAM,wD,EAIlBC,OAAS,WACLzC,aAAa0C,WAAW,SACxBzB,OAAOC,SAASC,KAAO,qB,EAO3BwB,WAAa,SAACC,GACV,IAAIC,EAAOC,SAASF,EAAKG,MAAM,KAAK,GAAGA,MAAM,KAAK,IAC9CC,EAAQF,SAASF,EAAKG,MAAM,KAAK,GAAGA,MAAM,KAAK,IAC/CE,EAAMH,SAASF,EAAKG,MAAM,KAAK,GAAGA,MAAM,KAAK,IAG7CG,EAAkB,IAAPL,EAAqB,GAARG,EAAaC,EAErCE,EAAOP,EAAKG,MAAM,KAAK,GAAGA,MAAM,KAAK,GACrCK,EAASR,EAAKG,MAAM,KAAK,GAAGA,MAAM,KAAK,GAGvCM,EAAQ,IAAIC,KAEZC,EAAYF,EAAMG,cAClBC,EAAaJ,EAAMK,WAAa,EAChCC,EAAWN,EAAMO,UAKrB,OAFAP,EAAoB,IAAZE,EAA+B,GAAbE,EAAkBE,KAE9BT,EACHC,EAAO,IAAMC,EACZC,EAAQH,IAAc,EACvB,eAEAL,EAAO,IAAMG,EAAQ,IAAMC,G,EAI1CzB,OAAS,WAEL,IAAIqC,EAAa,qBAAKpC,UAAU,eAAf,mCAIjB,IAA2B,IAAvB,EAAK3B,MAAMqC,QAEX,IADA,IAAI2B,EAAW,GACNC,EAAI,EAAGA,EAAI,EAAKjE,MAAMsC,UAAU4B,OAAQD,IAAK,CAClD,IAAIE,EAAK,sBAAKxC,UAAU,YAAf,UAEL,qBAAKA,UAAU,MAAf,SAAqB,qBAAKyC,IAAK,oDAAsD,EAAKpE,MAAMsC,UAAU2B,GAAGI,OAAQC,KAAK,MAAMC,OAAO,MAAMC,MAAO,CAAEC,aAAc,IAAMC,IAAI,gBAE9K,sBAAK/C,UAAU,eAAf,UACI,sBAAKA,UAAU,YAAf,UACI,qBAAKA,UAAU,WAAf,SAA2B,EAAK3B,MAAMsC,UAAU2B,GAAGU,WACnD,qBAAKhD,UAAU,gBAAf,SAAgC,EAAKkB,WAAW,EAAK7C,MAAMsC,UAAU2B,GAAGnB,WAE5E,qBAAKnB,UAAU,UAAf,SACI,qBAAKA,UAAU,GAAf,SAAmB,EAAK3B,MAAMsC,UAAU2B,GAAGW,GAAK,IAAM,EAAK5E,MAAMsC,UAAU2B,GAAGY,aAVjDC,KAAKC,UAc9Cf,EAASgB,KAAKb,GACdJ,EAAaC,EAGrB,OACI,qBAAKrC,UAAU,kBAAf,SACI,sBAAK6C,MAAO,CAAES,MAAO,QAArB,UACI,qBAAKtD,UAAU,uBAAf,SACI,qBAAKA,UAAU,aAAf,8CAIJ,8BACKoC,IAEL,qBAAKpC,UAAU,cAAcM,QAAS,EAAKU,OAA3C,wD,YAnHOT,IAAMC,W,iBCF3B+C,E,4MAGF3C,kBAAoB,WAGhB4C,YAAW,WACPhE,OAAOC,SAASC,KAAK,qBACtB,M,EAGPK,OAAS,WACL,OAAO,sBAAKC,UAAU,kBAAf,UACH,qBAAKA,UAAU,aAAf,sBAGA,qBAAKA,UAAU,gBAAf,gCAGA,qBAAKA,UAAU,cAAf,kF,YAnBWO,IAAMC,WCmBdiD,MAbf,WAEE,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAWL,IAEjC,cAAC,IAAD,CAAOG,KAAK,QAAQC,OAAK,EAACC,UAAWnD,IAErC,cAAC,IAAD,CAAOiD,KAAK,SAASC,OAAK,EAACC,UAAWxF,QCJ7ByF,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB5E,MAAK,YAAkD,IAA/C6E,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAAStE,OAEL,cAAC,EAAD,IAEFuE,SAASC,eAAe,SAM1BV,M","file":"static/js/main.7d860184.chunk.js","sourcesContent":["import React from \"react\";\r\nimport 'antd-mobile/dist/antd-mobile.css';\r\nimport { Button, InputItem, WhiteSpace, WingBlank } from 'antd-mobile';\r\nimport axios from \"axios\";\r\n\r\n\r\nclass Logon extends React.Component {\r\n    // 保存用户名和密码\r\n    state = {\r\n        // 将保存在本地的用户名和密码放在状态值，页面渲染时自动加载用户名和密码\r\n        user: localStorage.getItem(\"username\"),\r\n        password: localStorage.getItem(\"userpassword\")\r\n    }\r\n    // 获取输入框内输入的用户名\r\n    inputuserChange = (user) => {\r\n        this.setState({\r\n            user: user,\r\n        })\r\n    }\r\n    // 获取输入框输入的密码\r\n    inputpasswordChange = (password) => {\r\n        this.setState({\r\n            password: password,\r\n        })\r\n    }\r\n    //点击登录按钮进行登录\r\n    clickAlert = (e) => {\r\n        // 首先获取用户名和密码\r\n        let username = this.state.user;\r\n        let userpassword = this.state.password;\r\n        // 使用ajax的封装库axios与后台进行异步通讯\r\n        axios.post(\"https://happyyuwei.xyz:17615/rest/auth/login\", {\r\n            \"userId\": username,\r\n            \"password\": userpassword,\r\n        })\r\n            .then(function (response) {\r\n                // 请求成功，保存返回数据\r\n                let data = response.data;\r\n                // console.log(data);\r\n                // 将用户名密码保存在本地\r\n                localStorage.setItem(\"username\", username);\r\n                localStorage.setItem(\"userpassword\", userpassword);\r\n                localStorage.setItem(\"token\", data.token)\r\n                window.location.href = \"/patronum/#/list\"\r\n\r\n            })\r\n            .catch(function (error) {\r\n                // 登录失败，输出错误\r\n                console.log(error)\r\n            });\r\n\r\n    }\r\n    render = () => {\r\n        return (\r\n            <div className=\"logon\">\r\n                {/* 左右留白 */}\r\n                <WingBlank size=\"lg\">\r\n                    {/* 标题 */}\r\n                    <div className=\"title\">家庭守护-网页版</div>\r\n                    {/* 上下空白 */}\r\n                    <WhiteSpace size=\"lg\"></WhiteSpace>\r\n                    <WhiteSpace size=\"lg\"></WhiteSpace>\r\n                    {/* 输入用户名框 */}\r\n                    <InputItem placeholder=\"请输入用户名\" value={this.state.user} onChange={this.inputuserChange}> <div className=\"logon-user-icon\" /></InputItem>\r\n                    {/* 输入密码框 */}\r\n                    <InputItem type=\"password\" placeholder=\"请输入密码\" value={this.state.password} onChange={this.inputpasswordChange}><div className=\"logon-unlock-icon\" /></InputItem>\r\n                    <WhiteSpace size=\"lg\"></WhiteSpace>\r\n                    {/* 登录按钮 */}\r\n                    <Button type=\"primary\" onClick={this.clickAlert}>登录</Button>\r\n                </WingBlank>\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport { Logon }","import React from \"react\"\r\nimport axios from \"axios\";\r\n\r\n\r\nclass LocationList extends React.Component {\r\n    // 将位置列表保存在state,初始值为空\r\n    state = {\r\n        loading: true,\r\n        locations: []\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        // 判断本地是否存有用户名和密码，如果没有，就跳转到登录页面进行登录\r\n        if (localStorage.getItem(\"username\") === null && localStorage.getItem(\"userpassword\") === null && localStorage.getItem(\"token\") === null) {\r\n            window.location.href = \"/patronum/#/logon\"\r\n        }\r\n        // 使用get从后台获取数据\r\n        axios.get(\"https://happyyuwei.xyz:17615/rest/observer/location/all\", {\r\n            // 将token放在header里面\r\n            headers: {\r\n                \"token\": localStorage.getItem(\"token\")\r\n            }\r\n        })\r\n            // 请求成功，获取到数据\r\n            .then((response) => {\r\n                // data是一个数组里面嵌套对象的形式\r\n                let data = response.data;\r\n                console.log(data)\r\n                // 当从后台获取到数据，将数据放到状态location李敏\r\n                this.setState({\r\n                    loading: false,\r\n                    locations: data,\r\n                })\r\n            })\r\n            // 请求失败，打印出error\r\n            .catch((error) => {\r\n                console.log(error)\r\n                alert(\"用户名或密码错误\")\r\n            })\r\n    }\r\n\r\n    logout = () => {\r\n        localStorage.removeItem(\"token\")\r\n        window.location.href = \"/patronum/#/logon\"\r\n    }\r\n\r\n    /**\r\n     * 将时间格式化成 HH:mm， 如果是昨天，则使用昨天；如果是更早时间，仅仅显示日期、\r\n     * @param {} time \r\n     */\r\n    formatTime = (time) => {\r\n        let year = parseInt(time.split(\" \")[0].split(\"-\")[0])\r\n        let month = parseInt(time.split(\" \")[0].split(\"-\")[1])\r\n        let day = parseInt(time.split(\" \")[0].split(\"-\")[2])\r\n\r\n\r\n        let totalDay = year * 365 + month * 12 + day\r\n\r\n        let hour = time.split(\" \")[1].split(\":\")[0]\r\n        let minute = time.split(\" \")[1].split(\":\")[1]\r\n\r\n        // calculate today\r\n        let today = new Date()\r\n\r\n        let todayYear = today.getFullYear()\r\n        let todayMonth = today.getMonth() + 1\r\n        let todayDay = today.getDate()\r\n\r\n\r\n        today = todayYear * 365 + todayMonth * 12 + todayDay\r\n\r\n        if (today === totalDay) {\r\n            return hour + \":\" + minute\r\n        } else if ((today - totalDay) === 1) {\r\n            return \"昨天\"\r\n        } else {\r\n            return year + \"-\" + month + \"-\" + day\r\n        }\r\n    }\r\n\r\n    render = () => {\r\n\r\n        let detailBody = <div className=\"list-loading\">\r\n            加载中...\r\n            </div>\r\n\r\n        if (this.state.loading === false) {\r\n            let itemList = [];\r\n            for (let i = 0; i < this.state.locations.length; i++) {\r\n                let li = <div className=\"list-item\" key={Math.random()}>\r\n                    {/* 左边图片 */}\r\n                    <div className=\"img\"><img src={\"https://happyyuwei.xyz:17615/rest/resource/image/\" + this.state.locations[i].avatar} with=\"90%\" height=\"90%\" style={{ borderRadius: 10 }} alt=\"not found\"></img></div>\r\n                    {/* 右边nickName和address */}\r\n                    <div className=\"name-address\" >\r\n                        <div className=\"name-time\">\r\n                            <div className=\"nickname\">{this.state.locations[i].nickName}</div>\r\n                            <div className=\"location-time\">{this.formatTime(this.state.locations[i].time)}</div>\r\n                        </div>\r\n                        <div className=\"address\">\r\n                            <div className=\"\">{this.state.locations[i].ad + \",\" + this.state.locations[i].loc}</div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                itemList.push(li)\r\n                detailBody = itemList\r\n            }\r\n        }\r\n        return (\r\n            <div className=\"list-background\">\r\n                <div style={{ width: \"90vw\" }}>\r\n                    <div className=\"list-title-container\">\r\n                        <div className=\"list-title\">\r\n                            我关心的人\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        {detailBody}\r\n                    </div>\r\n                    <div className=\"list-footer\" onClick={this.logout}>\r\n                        退出当前账户\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    }\r\n}\r\n\r\nexport { LocationList }","import React from \"react\"\r\n\r\nclass BootPage extends React.Component {\r\n\r\n\r\n    componentDidMount = () => {\r\n\r\n        //wait 5 seconds and then move to list\r\n        setTimeout(() => {\r\n            window.location.href=\"/patronum/#/list\"\r\n        }, 5000)\r\n    }\r\n\r\n    render = () => {\r\n        return <div className=\"boot-background\">\r\n            <div className=\"boot-title\">\r\n                PATRONUM\r\n            </div>\r\n            <div className=\"boot-subtitle\">\r\n                网页版\r\n            </div>\r\n            <div className=\"boot-detail\">\r\n                @丁小小茹 @蝙蝙蝠侠 作品\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport { BootPage }","import React from \"react\"\r\nimport './App.css';\r\nimport { Logon } from \"./Logon.js\"\r\nimport { LocationList } from \"./List.js\"\r\n// 使用路由跳转页面\r\nimport { HashRouter as Router, Route} from 'react-router-dom'\r\nimport { BootPage } from \"./boot\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router>\r\n      <Route path=\"/\" exact component={BootPage} />\r\n      {/* 初始页面显示在list列表页面 */}\r\n      <Route path=\"/list\" exact component={LocationList} />\r\n      {/* 跳转到登录页面 */}\r\n      <Route path=\"/logon\" exact component={Logon} />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    <App />,\r\n  // </React.StrictMode>\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}