{"version":3,"sources":["Logon.js","List.js","boot.js","App.js","reportWebVitals.js","index.js"],"names":["Logon","state","user","localStorage","getItem","password","inputuserChange","setState","inputpasswordChange","clickAlert","e","username","userpassword","axios","post","then","response","data","console","log","setItem","token","window","location","href","catch","error","render","className","size","placeholder","value","onChange","style","backgroundImage","backgroundSize","height","width","type","onClick","React","Component","LocationList","locations","componentDidMount","get","headers","itemList","i","length","li","src","avatar","with","borderRadius","nickName","ad","loc","Math","random","push","class","BootPage","setTimeout","App","path","exact","component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.453bc197.chunk.js","sourcesContent":["import React from \"react\";\r\nimport 'antd-mobile/dist/antd-mobile.css';\r\nimport { Button, InputItem, WhiteSpace, WingBlank} from 'antd-mobile';\r\nimport axios from \"axios\";\r\n\r\n\r\nclass Logon extends React.Component{\r\n    // 保存用户名和密码\r\n    state={\r\n        // 将保存在本地的用户名和密码放在状态值，页面渲染时自动加载用户名和密码\r\n        user:localStorage.getItem(\"username\"),\r\n        password:localStorage.getItem(\"userpassword\")\r\n    }\r\n    // 获取输入框内输入的用户名\r\n    inputuserChange=(user)=>{\r\n        this.setState({\r\n            user:user,\r\n        })\r\n    }\r\n    // 获取输入框输入的密码\r\n    inputpasswordChange=(password)=>{\r\n        this.setState({\r\n            password:password,\r\n        })\r\n    }\r\n    //点击登录按钮进行登录\r\n    clickAlert=(e)=>{\r\n        // 首先获取用户名和密码\r\n        let username=this.state.user;\r\n        let userpassword=this.state.password;\r\n        // 使用ajax的封装库axios与后台进行异步通讯\r\n        axios.post(\"https://happyyuwei.xyz:17615/rest/auth/login\",{\r\n            \"userId\":username,\r\n            \"password\":userpassword,\r\n        })\r\n        .then(function(response){\r\n            // 请求成功，保存返回数据\r\n            let data=response.data;\r\n            console.log(data);\r\n            // 将用户名密码保存在本地\r\n            localStorage.setItem(\"username\",username);\r\n            localStorage.setItem(\"userpassword\",userpassword);\r\n            localStorage.setItem(\"token\",data.token)\r\n            window.location.href=\"/patronum/#/list\"\r\n\r\n        })\r\n        .catch(function(error){\r\n            // 登录失败，输出错误\r\n            console.log(error)\r\n         });\r\n        \r\n    }\r\n    render=()=>{\r\n        return(\r\n            <div className=\"logon\">\r\n                {/* 左右留白 */}\r\n                <WingBlank size=\"lg\">\r\n                {/* 标题 */}\r\n                <div className=\"title\">patronum-mobile</div>\r\n                {/* 上下空白 */}\r\n                <WhiteSpace size=\"lg\"></WhiteSpace>\r\n                <WhiteSpace size=\"lg\"></WhiteSpace>\r\n                {/* 输入用户名框 */}\r\n                <InputItem placeholder=\"请输入用户名\" value={this.state.user} onChange={this.inputuserChange}> <div style={{ backgroundImage: 'url(./user.png)', backgroundSize: 'cover', height: '22px', width: '22px' }} /></InputItem>\r\n                {/* 输入密码框 */}\r\n                <InputItem type=\"password\" placeholder=\"请输入密码\" value={this.state.password} onChange={this.inputpasswordChange}><div style={{ backgroundImage: 'url(./unlock.png)', backgroundSize: 'cover', height: '22px', width: '22px' }} /></InputItem>\r\n                <WhiteSpace size=\"lg\"></WhiteSpace>\r\n                {/* 登录按钮 */}\r\n                <Button type=\"primary\" onClick={this.clickAlert}>登录</Button>\r\n                </WingBlank>\r\n            </div>\r\n        )\r\n    }\r\n\r\n} \r\n\r\nexport {Logon}","import React from \"react\"\r\n// import { List} from 'antd-mobile';\r\nimport axios from \"axios\";\r\n\r\n\r\nclass LocationList extends React.Component {\r\n    // 将位置列表保存在state,初始值为空\r\n    state = {\r\n        locations: []\r\n\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        // 判断本地是否存有用户名和密码，如果没有，就跳转到登录页面进行登录\r\n        if (localStorage.getItem(\"username\") === null && localStorage.getItem(\"userpassword\") === null) {\r\n            window.location.href = \"/patronum/#/logon\"\r\n        }\r\n        // 使用get从后台获取数据\r\n        axios.get(\"https://happyyuwei.xyz:17615/rest/observer/location/all\", {\r\n            // 将token放在header里面\r\n            headers: {\r\n                \"token\": localStorage.getItem(\"token\")\r\n            }\r\n        })\r\n            // 请求成功，获取到数据\r\n            .then((response) => {\r\n                // data是一个数组里面嵌套对象的形式\r\n                let data = response.data;\r\n                console.log(data)\r\n                // 当从后台获取到数据，将数据放到状态location李敏\r\n                this.setState({\r\n                    locations: data,\r\n                })\r\n            })\r\n            // 请求失败，打印出error\r\n            .catch((error) => {\r\n                console.log(error)\r\n            })\r\n    }\r\n    render = () => {\r\n        let itemList = [];\r\n        for (let i = 0; i < this.state.locations.length; i++) {\r\n            let li = <div className=\"list-item\" key={Math.random()}>\r\n                {/* 左边图片 */}\r\n                <div className=\"img\"><img src={\"https://happyyuwei.xyz:17615/rest/resource/image/\" + this.state.locations[i].avatar} with=\"90%\" height=\"90%\" style={{ borderRadius: 10 }}></img></div>\r\n                {/* 右边nickName和address */}\r\n                <div className=\"name-address\" >\r\n                    <div className=\"nickname\">\r\n                        <div className=\"nickname\">{this.state.locations[i].nickName}</div>\r\n                    </div>\r\n                    <div className=\"address\">\r\n                        <div className=\"\">{this.state.locations[i].ad + \",\" + this.state.locations[i].loc}</div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            itemList.push(li)\r\n        }\r\n        return (\r\n            <div class=\"list-background\">\r\n                <div style={{ width: \"90vw\" }}>\r\n                    <div className=\"list-title-container\">\r\n                        <div className=\"list-title\">\r\n                            我关心的人\r\n                        </div>\r\n                    </div>\r\n                    <div>\r\n                        {itemList}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport { LocationList }","import React from \"react\"\r\n\r\nclass BootPage extends React.Component {\r\n\r\n\r\n    componentDidMount = () => {\r\n\r\n        //wait 5 seconds and then move to list\r\n        setTimeout(() => {\r\n            window.location.href=\"/patronum/#/list\"\r\n        }, 5000)\r\n    }\r\n\r\n    render = () => {\r\n        return <div className=\"boot-background\">\r\n            <div className=\"boot-title\">\r\n                PATRONUM\r\n            </div>\r\n            <div className=\"boot-subtitle\">\r\n                网页版\r\n            </div>\r\n            <div className=\"boot-detail\">\r\n                @丁小小茹 @蝙蝙蝠侠 作品\r\n            </div>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport { BootPage }","import React from \"react\"\r\nimport './App.css';\r\nimport { Logon } from \"./Logon.js\"\r\nimport { LocationList } from \"./List.js\"\r\n// 使用路由跳转页面\r\nimport { HashRouter as Router, Route, Link } from 'react-router-dom'\r\nimport { BootPage } from \"./boot\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router>\r\n      <Route path=\"/\" exact component={BootPage} />\r\n      {/* 初始页面显示在list列表页面 */}\r\n      <Route path=\"/list\" exact component={LocationList} />\r\n      {/* 跳转到登录页面 */}\r\n      <Route path=\"/logon\" exact component={Logon} />\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  // <React.StrictMode>\r\n    <App />,\r\n  // </React.StrictMode>\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}